{"version":3,"sources":["components/MaiusculoChildren.js","App.js","index.js","components/Soma.js"],"names":["MaiusculoChildren","App","useState","num1","setNum1","num2","setNum2","resultado","setResultado","useEffect","document","title","parseFloat","trim","Soma","type","required","value","onChange","e","target","readOnly","ReactDOM","render","StrictMode","getElementById","module","exports","toFixed"],"mappings":"oKAeeA,I,gBCiEAC,MA1Ef,WAAc,MAGYC,mBAAS,IAHrB,mBAGLC,EAHK,KAGCC,EAHD,OAIYF,mBAAS,IAJrB,mBAILG,EAJK,KAICC,EAJD,OAKsBJ,mBAAS,IAL/B,mBAKLK,EALK,KAKMC,EALN,KA8BZ,OAvBAC,qBAAU,WACRC,SAASC,MAAQ,yBAChB,IAEHF,qBAAU,WACLG,WAAWT,EAAKU,SAAWD,WAAWP,EAAKQ,QAC5CL,EAAaM,IAAKX,EAAME,IAExBG,EAAa,MAEf,CAACL,EAAME,IAcP,mCAcE,gCACE,kDACA,uBACAU,KAAK,SACLC,UAAQ,EACRC,MAAOd,EACPe,SAAU,SAAAC,GAAC,OAAGf,EAAQe,EAAEC,OAAOH,UAG/B,uBAAK,uBAEL,kDACA,uBACAF,KAAK,SACLC,UAAQ,EACRC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAGb,EAAQa,EAAEC,OAAOH,UAG/B,uBAAK,uBAEL,gDACA,uBAAOF,KAAK,OAAOM,UAAQ,EAACJ,MAAOV,UCrE3Ce,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,U,gBCI1BC,EAAOC,QAJP,SAAcxB,EAAME,GACjB,OAAQO,WAAWT,GAAMS,WAAWP,IAAOuB,QAAQ,M","file":"static/js/main.cf8f00a6.chunk.js","sourcesContent":["import React from 'react'\n\nfunction MaiusculoChildren(props){\n\n  const textoDigitado = props.children\n  const textoMaiusculo = textoDigitado.toUpperCase()\n\n  return(\n    <>\n      {textoMaiusculo}\n    </> \n  )\n\n}\n\nexport default MaiusculoChildren","import React, {useState, useEffect} from 'react'\nimport Maiusculo from './components/Maiusculo'\nimport Maiusculo2 from './components/Maiusculo2'\nimport MaiusculoChildren from './components/MaiusculoChildren'\nimport Soma from './components/Soma'\n\nfunction App(){\n\n  //const [contador, setContador] = useState(0)\n  const [num1, setNum1] = useState('')\n  const [num2, setNum2] = useState('')\n  const [resultado, setResultado] = useState('')\n\n  useEffect(() => {\n    document.title = \"Calculadora em React\"\n  }, []) //quando o array estiver vazio, a função é executada apenas uma vez no carregamento da página\n\n  useEffect(() => {\n    if(parseFloat(num1.trim()) && parseFloat(num2.trim())){\n      setResultado(Soma(num1, num2))\n    }else{\n      setResultado('')\n    }\n  },[num1, num2])\n\n  /*function adicionarContador(){\n    setContador(contador+1)\n    console.log(`O valor ${contador} foi adicionado!`)\n    Soma()\n  }\n\n  function removerContador(){\n    setContador(contador-1)\n    console.log(`O valor ${contador} foi removido!`)\n  }*/\n\n  return(\n    <>\n      {/*\n      <Maiusculo texto=\"Bom dia\"/>\n      <Maiusculo2 texto=\"Bom dia\" cor=\"#05E6CB\"/>\n      <MaiusculoChildren>Bom dia</MaiusculoChildren>\n      */}\n\n      {/*<div>\n        Contador: {contador} <br></br>\n        <button onClick={adicionarContador}>Adicionar</button>\n        <button onClick={removerContador}>Remover</button>\n      </div>\n      <br/><br/>*/}\n\n      <div>\n        <label>Número 1: </label>\n        <input \n        type=\"number\" \n        required \n        value={num1} \n        onChange={e=> setNum1(e.target.value)} //Sem esta linha, o número não apareceria no input pois o valor seria captado porém a view não seria atualizada.\n        />\n\n        <br/><br/>\n\n        <label>Número 2: </label>\n        <input \n        type=\"number\"\n        required \n        value={num2} \n        onChange={e=> setNum2(e.target.value)}\n        />\n\n        <br/><br/>\n\n        <label>Resultado: </label>\n        <input type=\"text\" readOnly value={resultado}/>\n      </div>\n    </> \n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","/**Efetua a soma de dois números\n@author Pedro Mack Navarro\n@version 1.0\n@param float {num1} primeiro número a ser somado\n@param float {num2} segundo número a ser somado\n@returns float retorna a soma dos dois números\n*/\n\nfunction Soma(num1, num2){\n   return (parseFloat(num1)+parseFloat(num2)).toFixed(2)\n}\n\nmodule.exports = Soma"],"sourceRoot":""}